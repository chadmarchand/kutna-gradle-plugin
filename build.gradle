buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    ext {
        kutnaGradlePluginGroupId = 'com.chadmarchand.kutna'
        kutnaGradlePluginArtifactId = 'kutna-gradle-plugin'
        kutnaGradlePluginVersion = '1.0.83'
        kutnaGradlePluginVcsRepoUrl = 'https://github.com/chadmarchand/kutna-gradle-plugin.git'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

group "$kutnaGradlePluginGroupId"
version "$kutnaGradlePluginVersion"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.3.72'
    compile gradleApi()
}

configurations {
    testArtifacts.extendsFrom testCompile
}

task incrementPatchVersion {
    doLast {
        String patchVersion = version.substring(version.lastIndexOf('.') + 1)
        String majorAndMinorVersion = version.substring(0, version.lastIndexOf('.') + 1)
        int newPatchVersion = patchVersion.toInteger() + 1

        String updatedBuildFileText = buildFile
                .getText()
                .replaceFirst(
                        "kutnaGradlePluginVersion = '$kutnaGradlePluginVersion'",
                        "kutnaGradlePluginVersion = '" + majorAndMinorVersion + newPatchVersion + "'"
                )
        buildFile.setText(updatedBuildFileText)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task testJar(type: Jar, dependsOn: classes) {
    from sourceSets.test.output
    classifier "test"
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    testArtifacts testJar
}

def pomConfig = {
    licenses {
        license([:]) {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license"
            distribution "repo"
        }
    }
    developers {
        developer {
            id 'chadmarchand'
            name 'Chad Marchand'
        }
    }

    scm {
        url "$kutnaGradlePluginVcsRepoUrl"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact testJar {
                classifier "test"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId "$kutnaGradlePluginGroupId"
            artifactId "$kutnaGradlePluginArtifactId"
            version "$kutnaGradlePluginVersion"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Gradle plugin for Kutna')
                root.appendNode('name', "$kutnaGradlePluginArtifactId")
                root.appendNode('url', "$kutnaGradlePluginVcsRepoUrl")
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenPublication']
    publish = true

    pkg {
        repo = "$kutnaGradlePluginArtifactId"
        name = "$kutnaGradlePluginArtifactId"
        licenses = ['MIT']
        vcsUrl = "$kutnaGradlePluginVcsRepoUrl"
        version {
            name = "$kutnaGradlePluginVersion"
            desc = "$kutnaGradlePluginVersion"
            released  = new Date()
        }
    }
}
